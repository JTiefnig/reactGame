{"version":3,"sources":["components/Header.jsx","components/Board.jsx","components/HistoryButton.jsx","components/BrowserDataWarning.jsx","components/WinCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","onClick","className","Square","props","state","value","sign","this","x1","y1","x2","y2","cx","cy","r","fill","width","height","stroke","strokeWidth","React","Component","Board","i","squares","listItems","push","renderSquare","HistoryButton","move","step","lilBoard","ix","iy","id","field","px","py","sS","svgContent","map","el","BrowserDataWarning","onAccept","WinText","winner","WinCard","onOk","win","xSign","oSign","console","log","renderwinner","App","localStorage","getItem","JSON","parse","history","Array","xIsNext","browserDataConfirmation","setItem","stringify","handleinput","length","slice","calculateWinner","setState","concat","savestate","event","inp","parseInt","key","handleClick","first","Math","round","random","clearhistory","confirm","warningShown","newhist","status","current","winnerCard","clearBoard","setTimeout","calcNextMove","then","moves","jumpTo","val","confirmBrowserData","onKeyPress","handleKeyInput","tabIndex","lines","a","b","c","minimax","gameState","position","recursion","from","points","Infinity","possibleMoves","np","floor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f444769f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = ({ onClick }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Tic Tac Toe</h1>\r\n      <button className=\"btn\" onClick={onClick}>\r\n        New\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nclass Square extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let sign = <></>;\r\n\r\n    if (this.props.value === \"X\") {\r\n      sign = (\r\n        <>\r\n          <line className=\"draw\" x1=\"10%\" y1=\"10%\" x2=\"90%\" y2=\"90%\" />\r\n          <line className=\"draw\" x1=\"90%\" y1=\"10%\" x2=\"10%\" y2=\"90%\" />\r\n        </>\r\n      );\r\n    } else if (this.props.value === \"O\") {\r\n      sign = (\r\n        <circle className=\"draw\" cx=\"50%\" cy=\"50%\" r=\"40%\" fill=\"transparent\" />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <button className=\"square\" onClick={() => this.props.onClick()}>\r\n        <svg width=\"100%\" height=\"100%\" stroke=\"white\" strokeWidth=\"10%\">\r\n          {sign}\r\n        </svg>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: null,\r\n    };\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        key={i}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    //const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n    //const listItems = numbers.map((number) => this.renderSquare(number));\r\n\r\n    let listItems = [];\r\n    for (let i = 0; i < 9; i++) listItems.push(this.renderSquare(i));\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Board\">{listItems}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\n\r\nclass HistoryButton extends React.Component {\r\n  constructor(props, move, step) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      move: move,\r\n      step: step,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let lilBoard = [];\r\n    lilBoard.push(\r\n      <>\r\n        <line className=\"draw\" x1=\"33%\" y1=\"0%\" x2=\"33%\" y2=\"100%\" />\r\n        <line className=\"draw\" x1=\"66%\" y1=\"0%\" x2=\"66%\" y2=\"100%\" />\r\n        <line className=\"draw\" x1=\"0%\" y1=\"33%\" x2=\"100%\" y2=\"33%\" />\r\n        <line className=\"draw\" x1=\"0%\" y1=\"66%\" x2=\"100%\" y2=\"66%\" />\r\n      </>\r\n    );\r\n\r\n    for (var ix = 0; ix < 3; ix++)\r\n      for (var iy = 0; iy < 3; iy++) {\r\n        var id = ix + iy * 3;\r\n        var field = this.props.step.squares[id];\r\n\r\n        const sS = 25; // Signsize\r\n        const ofs = 3;\r\n        if (field === \"X\") {\r\n          lilBoard.push(\r\n            <>\r\n              <line\r\n                className=\"draw\"\r\n                x1={ix * 33 + ofs + \"%\"}\r\n                y1={iy * 33 + ofs + \"%\"}\r\n                x2={ix * 33 + ofs + sS + \"%\"}\r\n                y2={iy * 33 + ofs + sS + \"%\"}\r\n              />\r\n              <line\r\n                className=\"draw\"\r\n                x1={ix * 33 + ofs + sS + \"%\"}\r\n                y1={iy * 33 + ofs + \"%\"}\r\n                x2={ix * 33 + ofs + \"%\"}\r\n                y2={iy * 33 + ofs + sS + \"%\"}\r\n              ></line>\r\n            </>\r\n          );\r\n        }\r\n\r\n        if (field === \"O\") {\r\n          const px = ix * 33 + 17;\r\n          const py = iy * 33 + 17;\r\n          lilBoard.push(\r\n            <circle\r\n              className=\"draw\"\r\n              cx={px + \"%\"}\r\n              cy={py + \"%\"}\r\n              r={sS / 2 + \"%\"}\r\n              fill=\"transparent\"\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n    let svgContent = lilBoard.map((el, id) => <g key={id}>{el}</g>);\r\n\r\n    return (\r\n      <button className=\"historyButton\" onClick={() => this.props.onClick()}>\r\n        <svg className=\"lilBoard\" stroke=\"black\" strokeWidth=\"2%\">\r\n          {svgContent}\r\n        </svg>\r\n        <a>Jump to move {this.props.move}</a>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HistoryButton;\r\n","import { useState } from \"react\";\r\n\r\nconst BrowserDataWarning = ({ onAccept }) => {\r\n  return (\r\n    <div className=\"FullScreenContainer\">\r\n      <div className=\"WarningBox\">\r\n        <h3>Your tracker settings</h3>\r\n        <a>\r\n          We use cookies and similar methods to recognize visitors and remember\r\n          their preferences. We also use them to measure ad campaign\r\n          effectiveness, target ads and analyze site traffic.\r\n        </a>\r\n        <br></br>\r\n        <a>\r\n          By clicking accept, you consent to the processing of your data by us\r\n          and third parties using the above methods. You can always change your\r\n          tracker preferences by visiting our Cookie Policy.\r\n        </a>\r\n        <button className=\"btn\" onClick={() => onAccept(true)}>\r\n          ACCEPT\r\n        </button>\r\n        <button className=\"btn\" onClick={() => onAccept(false)}>\r\n          REJECT\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrowserDataWarning;\r\n","const WinText = ({ winner }) => {\r\n  if (winner === \"Draw\") {\r\n    return <h2>Draw</h2>;\r\n  }\r\n  return <h2>WON</h2>;\r\n};\r\n\r\nconst WinCard = ({ winner, onOk }) => {\r\n  const renderwinner = (win) => {\r\n    const w = 100;\r\n    const h = 100;\r\n    const xSign = (\r\n      <svg width={w} height={h}>\r\n        <line\r\n          className=\"draw\"\r\n          x1=\"10%\"\r\n          y1=\"10%\"\r\n          x2=\"90%\"\r\n          y2=\"90%\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"10%\"\r\n        />\r\n        <line\r\n          className=\"draw\"\r\n          x1=\"90%\"\r\n          y1=\"10%\"\r\n          x2=\"10%\"\r\n          y2=\"90%\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"10%\"\r\n        />\r\n      </svg>\r\n    );\r\n    const oSign = (\r\n      <svg width={w} height={h}>\r\n        <circle\r\n          className=\"draw\"\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          r=\"40%\"\r\n          fill=\"transparent\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"10%\"\r\n        />\r\n      </svg>\r\n    );\r\n    console.log(win);\r\n    if (win === \"X\") return xSign;\r\n    if (win === \"O\") return oSign;\r\n    if (win === \"Draw\")\r\n      return (\r\n        <>\r\n          {xSign}\r\n          {oSign}\r\n        </>\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className=\"FullScreenContainer\">\r\n      <div className=\"WinnerBox fadeIn-bottom\">\r\n        <div>{renderwinner(winner)}</div>\r\n        <WinText winner={winner}></WinText>\r\n        <button className=\"btn\" onClick={onOk}>\r\n          NEW GAME\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WinCard;\r\n","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Board from \"./components/Board\";\r\nimport HistoryButton from \"./components/HistoryButton\";\r\nimport BrowserDataWarning from \"./components/BrowserDataWarning\";\r\nimport { toBeRequired } from \"@testing-library/jest-dom/dist/matchers\";\r\nimport WinCard from \"./components/WinCard\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (localStorage.getItem(\"gamestate\")) {\r\n      this.state = JSON.parse(localStorage.getItem(\"gamestate\"));\r\n    } else {\r\n      this.state = {\r\n        history: [\r\n          {\r\n            squares: Array(9).fill(null),\r\n          },\r\n        ],\r\n        xIsNext: false,\r\n        browserDataConfirmation: false,\r\n      };\r\n    }\r\n  }\r\n\r\n  savestate() {\r\n    if (this.state.browserDataConfirmation)\r\n      localStorage.setItem(\r\n        \"gamestate\",\r\n        JSON.stringify({\r\n          history: this.state.history,\r\n          xIsNext: this.state.xIsNext,\r\n          browserDataConfirmation: this.state.browserDataConfirmation,\r\n        })\r\n      );\r\n  }\r\n\r\n  handleClick(i) {\r\n    if (!this.state.xIsNext) {\r\n      this.handleinput(i);\r\n    }\r\n  }\r\n\r\n  handleinput(i) {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n\r\n    this.savestate();\r\n  }\r\n\r\n  handleKeyInput(event) {\r\n    try {\r\n      var inp = parseInt(event.key) - 1;\r\n      if (inp >= 0 && inp < 9) {\r\n        this.handleClick(inp);\r\n      }\r\n    } catch {}\r\n  }\r\n\r\n  clearBoard() {\r\n    let first = Math.round(Math.random());\r\n\r\n    let clearhistory = [\r\n      {\r\n        squares: Array(9).fill(null),\r\n      },\r\n    ];\r\n\r\n    this.setState({\r\n      history: clearhistory,\r\n      xIsNext: first,\r\n    });\r\n\r\n    this.savestate();\r\n  }\r\n\r\n  confirmBrowserData(confirm) {\r\n    this.setState({\r\n      browserDataConfirmation: confirm,\r\n      warningShown: true,\r\n    });\r\n\r\n    this.savestate();\r\n  }\r\n\r\n  jumpTo(move) {\r\n    const newhist = this.state.history.slice(0, move + 1);\r\n\r\n    this.setState({\r\n      history: newhist,\r\n      xIsNext: move % 2 === 0,\r\n    });\r\n\r\n    this.savestate();\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n    let status;\r\n    let winnerCard = <></>;\r\n    if (winner) {\r\n      status = winner;\r\n      winnerCard = (\r\n        <WinCard winner={winner} onOk={() => this.clearBoard()}></WinCard>\r\n      );\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n      setTimeout(() => {\r\n        if (this.state.xIsNext)\r\n          calcNextMove(current.squares).then((move) => {\r\n            this.handleinput(move);\r\n          });\r\n      }, 500);\r\n    }\r\n\r\n    const moves = history.map((step, move) => {\r\n      if (move == 0) return <></>;\r\n\r\n      return (\r\n        <li key={move}>\r\n          <HistoryButton\r\n            onClick={() => this.jumpTo(move)}\r\n            step={step}\r\n            move={move}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n\r\n    const warningRender = () => {\r\n      if (!this.state.browserDataConfirmation && !this.state.warningShown) {\r\n        return (\r\n          <BrowserDataWarning\r\n            onAccept={(val) => this.confirmBrowserData(val)}\r\n          />\r\n        );\r\n      }\r\n\r\n      return <></>;\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {warningRender()}\r\n        {winnerCard}\r\n        <div className=\"container\">\r\n          <div\r\n            className=\"gameContainer\"\r\n            onKeyPress={(event) => this.handleKeyInput(event)}\r\n            tabIndex=\"0\"\r\n          >\r\n            <Header onClick={() => this.clearBoard()} />\r\n            <div>{status}</div>\r\n            <div className=\"BoardContainer\">\r\n              <Board\r\n                squares={current.squares}\r\n                onClick={(i) => {\r\n                  this.handleClick(i);\r\n                }}\r\n              ></Board>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"historyContainer\">\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < 9; i++) {\r\n    if (squares[i] == null) return null;\r\n  }\r\n\r\n  return \"Draw\";\r\n}\r\n\r\nfunction minimax(gameState, position, recursion = 0, xIsNext) {\r\n  // do move\r\n  let squares = Array.from(gameState);\r\n  squares[position] = xIsNext ? \"X\" : \"O\";\r\n\r\n  let winner = calculateWinner(squares);\r\n  if (winner === \"Draw\") return 0;\r\n  if (winner === \"X\") return 9 * 9 - recursion * recursion;\r\n  if (winner === \"O\") return -(9 * 9 - recursion * recursion);\r\n\r\n  let points = 0;\r\n  for (let i = 0; i < 9; i++) {\r\n    if (!squares[i]) {\r\n      points += minimax(squares, i, recursion + 1, !xIsNext);\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// X = Computer\r\nasync function calcNextMove(gameState) {\r\n  let points = -Infinity;\r\n  let possibleMoves = [];\r\n\r\n  for (let i = 0; i < 9; i++) {\r\n    if (!gameState[i]) {\r\n      let np = minimax(gameState, i, 0, true);\r\n      if (np == points) {\r\n        possibleMoves.push(i);\r\n      }\r\n      if (np > points) {\r\n        possibleMoves = [];\r\n        possibleMoves.push(i);\r\n        points = np;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (possibleMoves.length)\r\n    return possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\r\n  return -1;\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}