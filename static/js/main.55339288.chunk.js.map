{"version":3,"sources":["components/Header.jsx","components/Board.jsx","components/HistoryButton.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","text","onClick","className","e","Square","props","state","value","sign","this","x1","y1","x2","y2","cx","cy","r","fill","width","height","stroke","strokeWidth","React","Component","Board","i","squares","listItems","push","renderSquare","HistoryButton","move","step","lilBoard","ix","iy","id","field","px","py","sS","svgContent","map","el","App","localStorage","getItem","JSON","parse","history","Array","xIsNext","setItem","stringify","length","slice","calculateWinner","setState","concat","savestate","clearhistory","newhist","console","log","status","current","winner","moves","jumpTo","clearBoard","handleClick","lines","a","b","c","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55339288.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Header = ({ text, onClick }) => {\r\n  const btnclick = (e) => onClick(e);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>{text}</h1>\r\n      <button className=\"btn\" onClick={btnclick}>\r\n        NEW\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nclass Square extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let sign = <></>;\r\n\r\n    if (this.props.value === \"X\") {\r\n      sign = (\r\n        <>\r\n          <line className=\"draw\" x1=\"10%\" y1=\"10%\" x2=\"90%\" y2=\"90%\" />\r\n          <line className=\"draw\" x1=\"90%\" y1=\"10%\" x2=\"10%\" y2=\"90%\" />\r\n        </>\r\n      );\r\n    } else if (this.props.value === \"O\") {\r\n      sign = (\r\n        <circle className=\"draw\" cx=\"50%\" cy=\"50%\" r=\"40%\" fill=\"transparent\" />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <button className=\"square\" onClick={() => this.props.onClick()}>\r\n        <svg width=\"100%\" height=\"100%\" stroke=\"white\" strokeWidth=\"10%\">\r\n          {sign}\r\n        </svg>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: null,\r\n    };\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        key={i}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    //const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n    //const listItems = numbers.map((number) => this.renderSquare(number));\r\n\r\n    let listItems = [];\r\n    for (let i = 0; i < 9; i++) listItems.push(this.renderSquare(i));\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Board\">{listItems}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\n\r\nclass HistoryButton extends React.Component {\r\n  constructor(props, move, step) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      move: move,\r\n      step: step,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let lilBoard = [];\r\n    lilBoard.push(\r\n      <>\r\n        <line className=\"draw\" x1=\"33%\" y1=\"0%\" x2=\"33%\" y2=\"100%\" />\r\n        <line className=\"draw\" x1=\"66%\" y1=\"0%\" x2=\"66%\" y2=\"100%\" />\r\n        <line className=\"draw\" x1=\"0%\" y1=\"33%\" x2=\"100%\" y2=\"33%\" />\r\n        <line className=\"draw\" x1=\"0%\" y1=\"66%\" x2=\"100%\" y2=\"66%\" />\r\n      </>\r\n    );\r\n\r\n    for (var ix = 0; ix < 3; ix++)\r\n      for (var iy = 0; iy < 3; iy++) {\r\n        var id = ix + iy * 3;\r\n        var field = this.props.step.squares[id];\r\n\r\n        const sS = 25; // Signsize\r\n        const ofs = 3;\r\n        if (field === \"X\") {\r\n          lilBoard.push(\r\n            <>\r\n              <line\r\n                className=\"draw\"\r\n                x1={ix * 33 + ofs + \"%\"}\r\n                y1={iy * 33 + ofs + \"%\"}\r\n                x2={ix * 33 + ofs + sS + \"%\"}\r\n                y2={iy * 33 + ofs + sS + \"%\"}\r\n              />\r\n              <line\r\n                className=\"draw\"\r\n                x1={ix * 33 + ofs + sS + \"%\"}\r\n                y1={iy * 33 + ofs + \"%\"}\r\n                x2={ix * 33 + ofs + \"%\"}\r\n                y2={iy * 33 + ofs + sS + \"%\"}\r\n              ></line>\r\n            </>\r\n          );\r\n        }\r\n\r\n        if (field === \"O\") {\r\n          const px = ix * 33 + 17;\r\n          const py = iy * 33 + 17;\r\n          lilBoard.push(\r\n            <circle\r\n              className=\"draw\"\r\n              cx={px + \"%\"}\r\n              cy={py + \"%\"}\r\n              r={sS / 2 + \"%\"}\r\n              fill=\"transparent\"\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n    let svgContent = lilBoard.map((el, id) => <g key={id}>{el}</g>);\r\n\r\n    return (\r\n      <button className=\"historyButton\" onClick={() => this.props.onClick()}>\r\n        <svg className=\"lilBoard\" stroke=\"black\" strokeWidth=\"2%\">\r\n          {svgContent}\r\n        </svg>\r\n        <a>Jump to move {this.props.move}</a>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HistoryButton;\r\n","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Board from \"./components/Board\";\r\nimport HistoryButton from \"./components/HistoryButton\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (localStorage.getItem(\"gamestate\")) {\r\n      this.state = JSON.parse(localStorage.getItem(\"gamestate\"));\r\n    } else {\r\n      this.state = {\r\n        history: [\r\n          {\r\n            squares: Array(9).fill(null),\r\n          },\r\n        ],\r\n        xIsNext: true,\r\n      };\r\n    }\r\n  }\r\n\r\n  savestate() {\r\n    localStorage.setItem(\r\n      \"gamestate\",\r\n      JSON.stringify({\r\n        history: this.state.history,\r\n        xIsNext: this.state.xIsNext,\r\n      })\r\n    );\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n\r\n    this.savestate();\r\n  }\r\n\r\n  clearBoard() {\r\n    let clearhistory = [\r\n      {\r\n        squares: Array(9).fill(null),\r\n      },\r\n    ];\r\n\r\n    this.setState({\r\n      history: clearhistory,\r\n      xIsNext: true,\r\n    });\r\n\r\n    this.savestate();\r\n  }\r\n\r\n  jumpTo(move) {\r\n    const newhist = this.state.history.slice(0, move + 1);\r\n\r\n    console.log(move);\r\n\r\n    this.setState({\r\n      history: newhist,\r\n      xIsNext: move % 2 === 0,\r\n    });\r\n\r\n    this.savestate();\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n    let status;\r\n    if (winner) {\r\n      status = winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    const moves = history.map((step, move) => {\r\n      if (move == 0) return <></>;\r\n\r\n      return (\r\n        <li key={move}>\r\n          <HistoryButton\r\n            onClick={() => this.jumpTo(move)}\r\n            step={step}\r\n            move={move}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className=\"gameContainer\">\r\n            <Header onClick={() => this.clearBoard()} text=\"Tic Tac Toe\" />\r\n            <div>{status}</div>\r\n            <div className=\"BoardContainer\">\r\n              <Board\r\n                squares={current.squares}\r\n                onClick={(i) => this.handleClick(i)}\r\n              ></Board>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"historyContainer\">\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return \"Winner: \" + squares[a];\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < 9; i++) {\r\n    if (squares[i] == null) return null;\r\n  }\r\n\r\n  return \"Draw\";\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}